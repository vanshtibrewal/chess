{"ast":null,"code":"var _jsxFileName = \"/Users/Vansh/Documents/GitHub/chess/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  onSquareClick,\n  parity,\n  piece\n}) {\n  let color = parity ? \"light\" : \"dark\";\n  if (piece == null) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square \" + color,\n      onClick: onSquareClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  } else {\n    let n;\n    if (piece.color == \"w\") {\n      n = 0;\n    } else {\n      n = 1;\n    }\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square \" + color,\n      onClick: onSquareClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"square\",\n        src: \"/images/\" + piece.type + \"_\" + n + \".png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = Square;\nfunction Board({\n  board\n}) {\n  let b = [];\n  let row;\n  let p = new Piece();\n  for (let i = 0; i < 8; i++) {\n    row = [];\n    for (let j = 0; j < 8; j++) {\n      row.push( /*#__PURE__*/_jsxDEV(Square, {\n        onSquareClick: () => handleClick(0),\n        parity: (i + j) % 2 == 0,\n        piece: board[i][j]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this));\n    }\n    b.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: b\n  }, void 0, false);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [board, setBoard] = useState(Array(8).fill(Array(8).fill(null)));\n  // setBoard(getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\"));\n  let newb = getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\");\n  // setBoard(newb.slice());\n  console.log(newb.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        board: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"UMgQ/i2rV348bEGPV1px/iRYFC8=\");\n_c3 = Game;\nclass Piece {\n  constructor(type, color, movement) {\n    this.type = type;\n    this.color = color;\n    this.movement = movement;\n  }\n}\nfunction makePiece(id, color) {\n  if (id == \"p\") {\n    let dir = color == \"b\" ? 1 : -1;\n    return new Piece(\"p\", color, [[dir, 0], [dir, 1], [dir, -1]]);\n  } else if (id == \"n\") {\n    return new Piece(\"n\", color, [[1, 2], [2, 1], [-1, 2], [-2, 1], [1, -2], [2, -1], [-1, -2], [-2, -1]]);\n  } else if (id == \"b\") {\n    return new Piece(\"b\", color, [[1, 1], [1, -1], [-1, 1], [-1, -1]]);\n  } else if (id == \"r\") {\n    return new Piece(\"r\", color, [[1, 0], [-1, 0], [0, 1], [0, -1]]);\n  } else if (id == \"q\") {\n    return new Piece(\"q\", color, [[1, 1], [1, -1], [-1, 1], [-1, -1], [1, 0], [-1, 0], [0, 1], [0, -1]]);\n  } else if (id == \"k\") {\n    return new Piece(\"k\", color, [[1, 1], [1, 0], [1, -1], [0, 1], [0, -1], [-1, 1], [-1, 0], [-1, -1]]);\n  }\n}\nfunction getBoardFromFEN(FEN) {\n  let board = Array(8).fill(Array(8).fill(null));\n  let char;\n  let j;\n  let counter = 0;\n  for (let i = 0; i < 8; i++) {\n    j = 0;\n    while (j < 8) {\n      char = FEN.charAt(counter);\n      if (!isNaN(char)) {\n        j += Number(char);\n      } else {\n        if (char == char.toLowerCase()) {\n          board[i][j] = makePiece(char, \"b\");\n        } else {\n          char = char.toLowerCase();\n          board[i][j] = makePiece(char, \"w\");\n        }\n        j++;\n      }\n      counter++;\n    }\n    counter++;\n  }\n  return board;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","onSquareClick","parity","piece","color","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","n","children","src","type","_c","Board","board","b","row","p","Piece","i","j","push","handleClick","_c2","Game","_s","setBoard","Array","fill","newb","getBoardFromFEN","console","log","length","_c3","constructor","movement","makePiece","id","dir","FEN","char","counter","charAt","isNaN","Number","toLowerCase","$RefreshReg$"],"sources":["/Users/Vansh/Documents/GitHub/chess/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ onSquareClick, parity, piece }) {\n  let color = parity ? \"light\" : \"dark\";\n  if (piece == null) {\n    return (\n      <button className={\"square \" + color} onClick={onSquareClick}>\n      </button>\n    );\n  }\n  else {\n    let n;\n    if (piece.color == \"w\") {\n      n = 0;\n    }\n    else {\n      n = 1;\n    }\n    return (\n      <button className={\"square \" + color} onClick={onSquareClick}>\n        <img className=\"square\" src={\"/images/\" + piece.type + \"_\" + n + \".png\"}/>\n      </button>\n    );\n  }\n}\n\nfunction Board({ board }) {\n  let b = [];\n  let row;\n  let p = new Piece();\n  for (let i = 0; i < 8; i++) {\n    row = [];\n    for (let j = 0; j < 8; j++) {\n      row.push(<Square onSquareClick={() => handleClick(0)} parity={(i + j) % 2 == 0} piece={board[i][j]}/>);\n    }\n    b.push(<div className=\"board-row\">{row}</div>);\n  }\n  return (<>{b}</>);\n}\n\nexport default function Game() {\n  const [board, setBoard] = useState(Array(8).fill(Array(8).fill(null)));\n  // setBoard(getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\"));\n  let newb = getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\");\n  // setBoard(newb.slice());\n  console.log(newb.length)\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board board={board}/>\n      </div>\n    </div>\n  );\n}\n\nclass Piece {\n  constructor(type, color, movement) {\n    this.type = type;\n    this.color = color;\n    this.movement = movement;\n  }\n}\n\nfunction makePiece(id, color) {\n  if (id == \"p\") {\n    let dir = color == \"b\" ? 1 : -1;\n    return new Piece(\"p\", color, [[dir, 0], [dir, 1], [dir, -1]]);\n  }\n  else if (id == \"n\") {\n    return new Piece(\"n\", color, [[1, 2], [2, 1], [-1, 2], [-2, 1], [1, -2], [2, -1], [-1, -2], [-2, -1]]);\n  }\n  else if (id == \"b\") {\n    return new Piece(\"b\", color, [[1, 1], [1, -1], [-1, 1], [-1, -1]]);\n  }\n  else if (id == \"r\") {\n    return new Piece(\"r\", color, [[1, 0], [-1, 0], [0, 1], [0, -1]]);\n  }\n  else if (id == \"q\") {\n    return new Piece(\"q\", color, [[1, 1], [1, -1], [-1, 1], [-1, -1], [1, 0], [-1, 0], [0, 1], [0, -1]]);\n  }\n  else if (id == \"k\") {\n    return new Piece(\"k\", color, [[1, 1], [1, 0], [1, -1], [0, 1], [0, -1], [-1, 1], [-1, 0], [-1, -1]]);\n  }\n}\n\nfunction getBoardFromFEN(FEN) {\n  let board = Array(8).fill(Array(8).fill(null));\n  let char;\n  let j;\n  let counter = 0;\n  for (let i = 0; i < 8; i++) {\n    j = 0;\n    while (j < 8) {\n      char = FEN.charAt(counter)\n      if (!isNaN(char)) {\n        j += Number(char);\n      }\n      else {\n        if (char == char.toLowerCase()) {\n          board[i][j] = makePiece(char, \"b\");\n        }\n        else {\n          char = char.toLowerCase();\n          board[i][j] = makePiece(char, \"w\");\n        }\n        j++;\n      }\n      counter++;\n    }\n    counter++;\n  }\n  return board;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}